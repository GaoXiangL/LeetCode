class Solution {
public:
    string addBinary(string a, string b) {
        
        //令a为较长的字符串
        if(a.length() < b.length()){
            string temp;
            temp = a;
            a = b;
            b = temp;
        }
        
        
        //i、j操作指针
        int i = a.length()-1;
        int j = b.length()-1;
        
        char flag = '0';   //标记是否有进位
        
        //当j指针大于0的时候，相加操作
        while(j>=0){
            if(a[i] == '1' && b[j] == '1'){
                //1+1,进位,此位取决于上一位是否进位了
                a[i] = flag;
                flag = '1';
            }else if(a[i] == '0' && b[j] == '0'){
                //0+0，不进位，此位取决于上一位是否进位了
                a[i] = flag;
                flag = '0';
            }else{
                //1+0,是否进位取决于上一位是否进位
                if(flag == '1'){
                    a[i] = '0';
                }else{
                    a[i] = '1';
                }
            }
            i--,j--;
        }
        
        //cout<<"1:"<<a<<"\t"<<"2:"<<b<<"  flag = "<<flag<<endl;
        
        //当j指针小于0的时候，处理剩下i指针所指的字符串
        while(i>=0){
                        
            //cout<<"?????"<<"1:"<<a<<"\t"<<"2:"<<b<<endl;
            if(flag == '0'){
                //不需要加了
                break;
            }
            else if(a[i] == '0'){
                //仅加这一位
                a[i] = '1';flag = '0';
				break;
            }
            else{
                //继续加到下一位
                a[i] = '0';
                i--;
            }

        }
        
        //cout<<"1:"<<a<<"\t"<<"2:"<<b<<endl;
        
        //如果最后一位依然要加，添加到字符串开头
        if(flag == '1') a = '1' + a;
        
        //cout<<"1:"<<a<<"\t"<<"2:"<<b<<endl;
        
        return a;
        
}
};
