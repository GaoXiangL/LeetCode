class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        //通过二分检索进行改造，在有三个元素时停止，判断是找到元素还是插入位置
        
        //1.插入位置：寻找插入位置
        //2.找到元素：无重复元素，返回
        //若没有二分查找成功，则分为i=j和j-i=1两种情况考虑
        int i=0,j=nums.size()-1;
        int mid;
        
        while(j-i>1){
            
            mid = (i+j)/2;
            if(nums[mid] == target){
                return mid;
            }else if(nums[mid] > target){
                j = mid - 1;
            }else{
                i = mid + 1;
            }
            
        }
        
        
        if(i == j){
            //target <　> mid
            if(nums[i] == target) return i;
            else if(nums[i] < target) return i+1;
            else return i;
        }else{
            //j-i = 1
            //1:target<i; 2:target=i; 3:i<target<j; 4:target=j; 5:target>j
            if(nums[i] == target) return i;
            else if(nums[j] == target) return j;
            else if(target > nums[j]) return j+1;
            else if(target <nums[i]) return i;
            else return j;
        }
        
        
        
    }
};
