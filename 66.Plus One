class Solution {
public:
    vector<int> plusOne(vector<int>& digits) {
        //需要考虑的是是否进位的问题
        //从最后一位开始，若要进位，则再往前考虑一位；若不进位，则返回此数组
        //特殊情况：进位到最前面，整个数组变长1位
        
        int flag = 0;   //标记此次是否需要进位
        
        //将最后一位加1
        if(digits[digits.size()-1] == 9){
            //若需要进位，则flag置为1，开始寻找之后，并将最后一位置为0
            flag = 1;
            digits[digits.size()-1] = 0;
        }else{
            //无需进位，加1后直接返回
            digits[digits.size()-1] += 1;
            return digits;
        }
        
        //如果只有一位的话,运行到此处必然flag=1,即已需要进位
        if(digits.size() == 1){
            digits.insert(digits.begin(),1);
            return digits;
        }
        
        for(int i=digits.size()-2; i>=0; i--){
            
            //到达第一位，且需要进位
            if(i == 0 && digits[i] == 9 && flag == 1){
                digits[i] = 0;
                digits.insert(digits.begin(),1);
                return digits;
            }
            
            if(digits[i] == 9 && flag == 1){
                //需要进位
                flag = 1;
                digits[i] = 0;
            }else{
                digits[i] = digits[i] + flag;
                return digits;
            }
        }
        
        return digits;
        
        
    }
};
